# .github/workflows/ci.yml

name: CI – Build & Test Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # (Skip Docker Hub login entirely if you’re not pushing images)
      # - name: Log in to Docker Hub (optional)
      #   if: ${{ and(secrets.DOCKERHUB_USERNAME, secrets.DOCKERHUB_TOKEN) }}
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Flask app image
        run: |
          docker build \
            --file Dockerfile \
            --tag dev-app:ci \
            .

      - name: Run container health check
        run: |
          # 1. Start a temporary PostgreSQL container
          docker run -d --name tmp-db \
            -e POSTGRES_USER=testuser \
            -e POSTGRES_PASSWORD=testpass \
            -e POSTGRES_DB=testdb \
            postgres:13-alpine

          # 2. Wait until Postgres is ready
          until docker exec tmp-db pg_isready; do
            sleep 1
          done

          # 3. Run the Flask container with port binding so runner can access it
          docker run -d --name tmp-app -p 5000:5000 --link tmp-db:db \
            -e DATABASE_URL="postgresql://testuser:testpass@db:5432/testdb" \
            dev-app:ci

          # 4. Give Flask a moment to start
          sleep 5

          # 5. From the runner (NOT inside the container), curl the health endpoint
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/health)
          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "Health check failed with status $HTTP_CODE"
            exit 1
          fi

          echo "Health check passed."

      - name: Clean up containers
        if: always()
        run: |
          docker rm -f tmp-app tmp-db || true
